<?php

declare(strict_types=1);

/*
 * This file is part of the TYPO3 CMS extension "handlebars".
 *
 * Copyright (C) 2021 Elias Häußler <e.haeussler@familie-redlich.de>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <https://www.gnu.org/licenses/>.
 */

namespace Fr\Typo3Handlebars\Generator\Definition;

use Fr\Typo3Handlebars\Renderer\Helper\HelperInterface;
use Laminas\Code\Generator\DocBlock\Tag\GenericTag;
use Laminas\Code\Generator\DocBlock\Tag\ParamTag;
use Laminas\Code\Generator\DocBlock\Tag\ReturnTag;
use Laminas\Code\Generator\DocBlockGenerator;
use Laminas\Code\Generator\MethodGenerator;
use Laminas\Code\Generator\ParameterGenerator;

/**
 * HelperClassDefinition
 *
 * @author Elias Häußler <e.haeussler@familie-redlich.de>
 * @license GPL-2.0-or-later
 * @internal
 */
final class HelperClassDefinition implements ClassDefinitionInterface
{
    public const DEFAULT_METHOD_NAME = 'evaluate';

    public function build(string $name, array $options = []): array
    {
        return [
            'implementedinterfaces' => [
                HelperInterface::class,
            ],
            'methods' => [
                MethodGenerator::fromArray([
                    'name' => $options['methodName'] ?? self::DEFAULT_METHOD_NAME,
                    'visibility' => MethodGenerator::VISIBILITY_PUBLIC,
                    'parameters' => [
                        ParameterGenerator::fromArray([
                            'name' => 'context',
                            'type' => 'array',
                        ]),
                    ],
                    'returntype' => 'string',
                    'docblock' => DocBlockGenerator::fromArray([
                        'tags' => [
                            new ParamTag('context', ['array<string, mixed>']),
                            new ReturnTag('string'),
                        ],
                    ]),
                    'body' => sprintf('// TODO: Implement Handlebars helper "%s".', $name),
                ]),
            ],
            'docblock' => DocBlockGenerator::fromArray([
                'shortdescription' => sprintf('Handlebars helper "%s".', $name),
                'longdescription' => 'This class is auto-generated by EXT:handlebars.',
                'tags' => [
                    new GenericTag('see', '\\' . __METHOD__),
                ],
            ])->setWordWrap(false),
        ];
    }
}
